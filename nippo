#!/usr/bin/env bash
# nippo : 日報ファイル日付から作成するor開く
# -----------------------------------------------------------------------------
# 日報ファイルを置くディレクトリ
readonly NIPPO_HOME="${MARKDOWN_HOME}/nippo"
readonly USAGE="$(basename "$(which $0)") [-p] YYYYMMDD|YYMMDD|MMDD|DD|D"

# -----------------------------------------------------------------------------
# 日報ファイルを作成する
# Globals:
#		MARKDOWN_HOME	markdownファイルを保存するディレクトリ
# Arguments:
#		day_file			YYYYMMDD.md
# Return:
#		None
# -----------------------------------------------------------------------------
create_nippo() {
	local day_file
	local day
	local day_of_the_week
	day_file="$1"
	day="$(basename ${day_file} .md)"
	day_of_the_week="$(gdate -d "${day}" '+%a')"

	cat <<-EOF > "${day_file}"
# ${day} (${day_of_the_week})

## todo

###
###
###

## tips

## wish do

###
###
###
	EOF
}

# -----------------------------------------------------------------------------
# Usageを表示してexit
# Globals:
#		None
# Arguments:
#		Message
# Return:
#		1
# -----------------------------------------------------------------------------
usage_exit() {
	echo "$1"
	exit 1
}

# -----------------------------------------------------------------------------
# peco経由でNIPPO_HOME内のファイルを返す
# Globals:
#		MARKDOWN_HOME:	markdownファイルを保存するディレクトリ
# Arguments:
#		None						
# Return:
#		1	
# -----------------------------------------------------------------------------
fetch_file_path_via_peco() {
	local nippo_files
	local nippo_file
	nippo_files="$(ls "${NIPPO_HOME}" | grep -E '^[0-9]{8}\.md$')"

	if [[ -z "${nippo_files}" ]]; then
		echo "${NIPPO_HOME} is empty" >&2
		return 1
	fi

	nippo_file="$( echo "${nippo_files}" | peco )"

	# pecoをctl+cなどで終了した場合
	if [[ -z "${nippo_file}" ]]; then
		return 1
	fi

	echo "${NIPPO_HOME}/${nippo_file}"
}


# -----------------------------------------------------------------------------
# 日付からYYYYMMDD.mdを組み立てて返す
# Globals:
#		MARKDOWN_HOME:	markdownファイルを保存するディレクトリ
# Arguments:
#		date:						
# Return:
#		day.md:					true:YYYYMMDD.md false:null
# -----------------------------------------------------------------------------
fetch_file_path_from_date() {
	local day

	# 引数の桁数ごとに日付を組み立てる
	if [[ -n "$1" ]]; then
		case ${#1} in
			8)	day="$1" ;;
			6)	day="$(date '+%Y' | cut -c 1,2)$1" ;;
			4)	day="$(date '+%Y')$1" ;;
			2)	day="$(date '+%Y%m')$1" ;;
			1)	day="$(date '+%Y%m%d' | cut -c-6)0$1" ;;
		esac
	fi

	# TODO: gdateは嫌だな。。。dateにしたい
	if ! gdate -d "${day}" > /dev/null 2>&1; then
		echo "日付(${day})が間違っています" >&2
		return 1
	fi

	echo "${NIPPO_HOME}/${day}.md"
}

# -----------------------------------------------------------------------------
# Main
# -----------------------------------------------------------------------------
if [ ! -d "${NIPPO_HOME}" ]; then
	echo "\$NIPPPO_HOME(${NIPPPO_HOME}) is not directory" >&2
	exit 1
fi

day_file=
peco_flg=
success_flg=
while (( $# > 0 )); do
	case "$1" in
		-p)
			peco_flg="true"
			shift
			;;

		-h|-*)
			usage_exit "${USAGE}"
			;;

		*)
			break
			;;
	esac
done

if [[ -n "$1" && ! "$1" =~ ^[0-9]{1,8}$ ]]; then
	usage_exit "${USAGE}"
fi

if [[ $peco_flg = "true" ]]; then
	day_file="$(fetch_file_path_via_peco)"
	success_flg="$?"
else
	if [[ -n "$1" ]]; then
		day_file="$(fetch_file_path_from_date "$1")"
		success_flg="$?"
	else
		day_file="$NIPPO_HOME/$(date '+%Y%m%d').md"
	fi
fi

[[ ${success_flg} == 1 ]] && usage_exit "${USAGE}"
[[ ! -f "${day_file}" ]] && create_nippo "${day_file}"

vim "${day_file}"
